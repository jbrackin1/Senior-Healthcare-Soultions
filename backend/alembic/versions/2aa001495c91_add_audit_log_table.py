"""add audit log table

Revision ID: 2aa001495c91
Revises: 2baed7b6e092
Create Date: 2025-07-29 03:21:21.708825

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = "2aa001495c91"
down_revision: Union[str, Sequence[str], None] = "2baed7b6e092"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "audit_logs",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("user_id", sa.String(length=36), nullable=True),
        sa.Column("action", sa.String(length=255), nullable=False),
        sa.Column("target_id", sa.String(length=36), nullable=True),
        sa.Column("details", sa.JSON(), nullable=True),
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column(
        "users", "role", existing_type=mysql.VARCHAR(length=50), nullable=False
    )
    op.alter_column(
        "users",
        "is_admin",
        existing_type=mysql.TINYINT(display_width=1),
        nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users", "is_admin", existing_type=mysql.TINYINT(display_width=1), nullable=True
    )
    op.alter_column(
        "users", "role", existing_type=mysql.VARCHAR(length=50), nullable=True
    )
    op.drop_table("audit_logs")
    # ### end Alembic commands ###
